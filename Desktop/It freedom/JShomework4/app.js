// Задание 1
// Написать функцию, которая принимает два параметра и складывает их.
// Предусмотреть проверку на тип данных. Если хоть один из параметров не является числом, должно выводиться ообщение об ошибке. Также обраьботайте случай, если не было введено два параметра.
// Примеры результатов вызова функции:
// sum(2,4); // 6
// sum('d',4); // введенные данные не являются числами
// sum(1, [2]); // введенные данные не являются числами
// sum(1); // введите два параметра
// sum(); // введите два параметра

// Решение:
// function sumNums (a,b) {
//     if (a==null || b==null) {
//         console.log("Введите два параметра")
//     } else if (typeof a !== "number" || typeof b !== "number") {
//         console.log("Введенные данные не являются числами")
// } 
//  else {
//     console.log (a+b);
// }
// }
// sumNums();

// Задание 2
// Измените функцию "square" так, чтобы в случае ее вызова без аргумента генерировалась консольная ошибка (console.error):
// "Функция "square" не может быть вызвана без аргумента"
// function square(a) {
//   console.log(a * a)
// }
// square(10) // 100
// square()
// ДО: NaN
// ПОСЛЕ: Uncaught Error: Функция "square" не может быть вызвана без аргумента

// Решение:
// function square(a) {
//     if (a==null) {
//         console.error("Функция \"square\" не может быть вызвана без аргумента");
//     } else
//     console.log(a * a)
//     }
//     square(10) // 100
//     square();

// Задание 3
// Создать функцию "угадай число". Она принимает число от 1 до 10 (обязательно проверить, что число не больше 10 и не меньше 0). Генерирует рандомное число от 1 до 10 и сравнивает с заданным числом.
// Если они совпали, то возвращает “Вы выиграли”, если нет - то “Вы не угадали, ваше число -  ...,  а выпало число ...”
// Функция создания случайного числа уже была ранее в материалах, в задаче по созданию случайного цвета.
// Написать функцию в стрелочном синтаксисе.

// Решение:
// function getRandomInteger(min, max) {
//     return Math.floor(Math.random() * (max - min)) + min;
//     }

// let randomInt = (getRandomInteger(1,11))
// const guessAnumber = a => {
//     if (a>0 && a<=10) {
//         if (a === randomInt) {
//             console.log("Вы выиграли");
//         } else {
//             console.log(`Вы не угадали, Ваше число ${a}, а выпало число ${randomInt}`);
//         }
//     } else {
//         console.log("Число меньше нуля либо больше 10");
//     }
// }
// guessAnumber(12);


// Задание 4
// Напишите функцию copyArr(arr), которая копирует массив, не изменяя оригинал. Используйте подходящий метод массива - forEach или map.

// Решение:
// const arr = [];
// const copyArr = arr => arr.map(item => item);
// console.log(copyArr(arr));

// Задание 5
// Напишите функцию, которая принимает массив имен и возвращает новый массив, в котором каждое имя будет иметь приставку "Hello, "

// Решение:
// const names = ["Olga", "Anna", "Alex", "Nik"];
// const newNames = names.map(function(item) {
//     return ("Hello, " + item)
// })

// в стрелочном виде:
// const newNames = names.map(item => (`Hello, ${item}`));
//     console.log(newNames);

// Задание 6
// Напишите функцию, которая принимает массив объектов пользователей и возвращает новый массив, содержащий только их имена.

// Решение:
// const users = [
//     {name: 'Olga', age: 30, },
//     {name: 'Anna', age: 19, },
//     {name: 'Alex', age: 28, }
//   ];

// const newUsers = users.map (function(item) {
//     return item.name
// })
// console.log(newUsers)

// в стрелочном виде:
//  const newUsers = users.map(item => item.name);
//  console.log(newUsers);

// Задание 7
// Создайте функцию sumObjectValues, которая будет суммировать все значения свойств, которые являются числами. Сумму чисел необходимо вернуть из функции.
// Проверить работу функции можно на объекте:
// const objectWithNumbers = {
//   a: 10,
//   b: 20,
//   c: 'string',
//   d: 12,
// }

// Решение:
// const arr = Object.values(objectWithNumbers);
// function sumObjectValues(arr) {
//     let sum = 0;
//     arr.forEach(item => {
//         if (typeof item === 'number') {
//             sum += item;
//         }
//     });
//     return sum;
// }
// console.log(sumObjectValues(arr));

// Задание 8
// Напишите функцию ucFirst(str), возвращающую строку str с заглавным первым символом.
// Вам понадобятся методы строк.

// Решение:
// function ucFirst(str) {
//     return str[0].toUpperCase() + str.slice(1);
//   }
//   console.log(ucFirst("string") );

// Задание 9
// Напишите функцию checkSpam(str), возвращающую true, если str содержит 'badWord' или 'XXX', а иначе false.
// Функция должна быть нечувствительна к регистру.

// Решение:
// function checkSpam(str) {
//     let string = str.toLowerCase();
//     return string.includes('badword') || string.includes('xxx');
//   }
//   console.log(checkSpam('buy badWord now'));
//   console.log(checkSpam('free XXX'));
//   console.log(checkSpam("good word"));

// Задание 10
// Написать функцию, которой на вход подается строка, на выход она дает символы наоборот (разворачивает строку). Пример: «привет, Женя» -> «янеЖ ,тевирп»
// Обратите внимание: метод reverse существует только у массивов.

// Решение:
// function reverse(str) {
//     let string = str.split("");
//     let array = string.reverse();
//     array = array.join("")
//     return array;
// }
// console.log(reverse("привет, Женя"));

// Задание 11
// Массив содержит строки с информацией о железнодорожных станциях на севере Англии. Строки представляют собой трёхбуквенный код станции, затем некоторые машиночитаемые данные, за которыми следует точка с запятой, а затем название станции, пригодное для чтения человеком. 
// let stations = [
// 'MAN675847583748sjt567654;Manchester Piccadilly',
// 'GNF576746573fhdg4737dh4;Greenfield',
// 'LIV5hg65hd737456236dch46dg4;Liverpool Lime Street',
// 'SYB4f65hf75f736463;Stalybridge',
// 'HUD5767ghtyfyr4536dh45dg45dg3;Huddersfield'
// ];
// Необходимо извлечь код станции и имя и поместить их в строку со следующей структурой:
// MAN: Manchester Piccadilly
// Вывести эти строки в консоль
// ПОДСКАЗКА:
// 1. Извлеките трёхбуквенный код станции и сохраните его в новой переменной.
// 2. Найдите номер символьного номера точки с запятой.
// 3. Извлеките название для чтения человеком, используя номер индекса точки с запятой в качестве контрольной точки и сохраните его в новой переменной.
// 4. Объедините две новые переменные и строк

// Решение:
// let stations = [
// 'MAN675847583748sjt567654;Manchester Piccadilly',
// 'GNF576746573fhdg4737dh4;Greenfield',
// 'LIV5hg65hd737456236dch46dg4;Liverpool Lime Street',
// 'SYB4f65hf75f736463;Stalybridge',
// 'HUD5767ghtyfyr4536dh45dg45dg3;Huddersfield'
// ];

// const newStations  = stations.map(item => {
//     const string = item.split(';');              // каждый элемент массива разделился на две части - до и после ;
//     const codeSt = string[0].substring(0, 3);    // обратились к эл-ту с инд.0 (первая часть до ;) и извлекли 3 символа
//     return `${codeSt}: ${string[1]}`;
// });
// console.log(newStations);

// Задание 12
// Напишите функцию unique(arr), которая принимает массив, а возвращает новый массив, содержащий только уникальные элементы arr.
// Пример:
// let strings = ["кришна", "кришна", "харе", "харе", "харе", "харе", "кришна", "кришна", ":-O"];
// console.log(unique(strings) ); должен вывести "кришна, харе, :-O"
// ПОДСКАЗКА
// - создать новый массив
// - обойти исходный массив, если элемент отсутствует в новом - добавлять его в новый. Таким образом в новый добавятся только уникальные.

// Решение:
// let strings = ["кришна", "кришна", "харе", "харе", "харе", "харе", "кришна", "кришна", ":-O"];
// const arr=[];

// function unique(arr) {
//     strings.forEach(item => {
//         if (!arr.includes(item)) {
//             arr.push(item);
//         }
//     });
//     return arr;
// }
// console.log(unique(arr));

// Задание 13
// Женя и Юля изучают кошек. Каждая из них узнала у 10 владельцев кошек о возрасте их кошки и сохранила данные в массиве (по одному массиву для каждой девочки). На данный момент им просто интересно узнать, является ли кошка взрослой или котёнком.
// Кошка считается взрослой, если ей не менее 2 лет, и котёнком, если ей менее 2 лет.
// Создайте функцию verifyCats, которая принимает 2 массива возрастов кошек (catsJane и catsJulia) и выполняет следующие действия:
// 1. Женя выяснила, что владельцы первой и последней кошки на самом деле имеют собак, а не кошек! Поэтому удалите возраст собак из Жениного массива.
// 2. Создайте общий массив с данными Жени (исправленными) и Юли.
// 3. Для каждой кошки этого общего массива выведите в консоль текст:
// - если кошка взрослая -  Кошка № 1 взрослая, ей 6 лет
// - если котёнок - Кошка № 2 ещё котёнок
// 4. Вызовите функцию для двух наборов тестовых данных.
// Тестовые данные:
// 1.  Данные Жени [4, 5, 3, 11, 6, 2, 4, 1, 5, 9]
// Данные Юли [2, 4, 5, 1, 13, 2, 15, 8, 3, 7]
// 2.  Данные Жени [3, 5, 9, 14, 1, 2, 6, 8, 3, 10]
// Данные Юли [8, 2, 10, 1, 2, 5, 6, 3, 1, 4]
// В задании необходимо использовать методы массивов: forEach, slice, concat

// Решение:
// const catsJane = [4, 5, 3, 11, 6, 2, 4, 1, 5, 9];
// const catsJulia = [2, 4, 5, 1, 13, 2, 15, 8, 3, 7];
// let cats = [];

// function verifyCats (a,b) {
//     const aNew = a.slice(1, a.length - 1);
//     const cats = aNew.concat(b);
//     cats.forEach((item, index) => {
//         if (item>=2){
//             console.log(`Кошка № ${index+1} взрослая, ей ${item} лет`);
//         } else if (item<2) {
//             console.log(`Кошка № ${index} еще котенок`);
//         }
//     });
// };
// (verifyCats(catsJane,catsJulia));

// Задание 14
// Решить 4 задание из прошлой темы, используя метод filter
// Определить массив, например let arr = [5, 4, 3, 8, 0];
// Создать функцию filterFor(arr, a). Функция должна вернуть новый массив из элементов arr, но в нем должны содержаться элементы, которые больше или равны (>=) значения переменной a.
// Например, запуск функции filterFor(arr, 5) дает результат [5,8]
// запуск функции filterFor(arr, 10) дает результат []
// запуск функции filterFor(arr, 3.11) дает результат [4,5,8]
// Решение:
// let arr = [5, 4, 3, 8, 0];
// function filterFor(arr,a) {
//     const newArr = arr.filter(function(item){
//         return item>=a;
//     })
//     return newArr;
// };
// console.log(filterFor(arr,4));

// Задание 15
// Описать функцию, которая принимает массив строк и возвращает массив, содержащий только строки более 3-х символов. Проверить работу функции на примере:  ['yes', 'hello', 'no', 'easycode', 'what'].

// Решение:
// let strings = ['yes', 'hello', 'no', 'easycode', 'what'];
// const arr=[];

// function moreThreeSymbols(arr) {
//     strings.forEach(item => {
//         if (item.length>3) {
//             arr.push(item);
//         }
//     });
//     return arr;
// }
// console.log(moreThreeSymbols(arr));

// Задание 16
// Отсортируйте массив массивов так, чтобы вначале располагались наименьшие массивы (размер массива определяется его длиной): [ [14, 45], [1], ['a', 'c', 'd'] ] → [ [1], [14, 45], ['a', 'c', 'd'] ]
// ПОДСКАЗКА. Для правильной сортировки метод sort принимает функцию, параметры которой a и b - это элементы массива. В данной задаче элементы массива, то есть параметры a и b, сами являются массивами и обладают всеми свойствами массивов.

// Решение:
// const array = [[14, 45], [1], ['a', 'c', 'd']];
// const sortedArray = array.sort(function(a,b){
//     if(a.length>b.length) {
//         return 1;
//     } if (b.length>a.length) {
//         return -1;
//     }
// });
// console.log (sortedArray)

// или

// const array = [[14, 45], [1], ['a', 'c', 'd']];
// const sortedArray = array.sort((a, b) => a.length - b.length);
// console.log (sortedArray);

// Задание 17
// Создайте функцию getAverageHumanAge, которая принимает массив возрастов кошек (catAges) и выполняет следующие действия по порядку:
// 1. Рассчитывает человеческий возраст по следующей формуле: если возраст кошки <= 2 года, человеческий возраст = возраст кошки * 10. Если кошке больше 2 лет, человеческий возраст = возраст кошки * 7. (сделать через map)
// 2. Исключает всех кошек младше 18 человеческих лет. (сделать через filter)
// 3. Возвращает средний человеческий возраст для всех взрослых кошек. (сумму для среднего посчитать через reduce)
// Вызовите функцию для обоих наборов тестовых данных.
// Тестовые данные:
// 1: [7 , 3, 2, 4, 1, 15, 8, 1, 9, 2]
// 2: [1, 16, 12, 4, 5, 1, 3, 11, 7, 2]
// В задании необходимо использовать методы массивов: map, filter, reduce

// Решение:
// const catAges = [7 , 3, 2, 4, 1, 15, 8, 1, 9, 2];
// const catAges = [1, 16, 12, 4, 5, 1, 3, 11, 7, 2];

// function getAverageHumanAge(catAges) {
//     const humanAge = catAges.map (function(item) {
//         if (item<=2) {
//             return item * 10;
//         } else if (item>2) {
//             return item * 7;
//         }
//     });
//     const catsOver18 = humanAge.filter (function(item){
//         return item>18;
//     });
//     const averageHumanAge = catsOver18.reduce((acc,item) => acc + item, 0);
//     return averageHumanAge / catsOver18.length;
// }
// console.log(getAverageHumanAge(catAges));
